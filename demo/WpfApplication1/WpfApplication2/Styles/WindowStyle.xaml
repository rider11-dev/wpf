<Window x:Class="WpfApplication2.Styles.WindowStyle"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="WindowStyle" Height="400" Width="600">
    <Window.Resources>
        <!--基类样式-->
        <Style x:Key="styleButton" TargetType="Control">
            <Setter Property="Height" Value="50"/>
            <Setter Property="Margin" Value="35,0,0,0"/>
            <Setter Property="Background" Value="Beige"/>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <RotateTransform Angle="45"/>
                </Setter.Value>
            </Setter>
        </Style>
        <!--从基类样式派生的Button样式-->
        <!--
        <Style BasedOn="{StaticResource styleButton}" TargetType="Button">
            <Setter Property="Foreground" Value="Blue"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="LightGreen"/>
                </Trigger>
            </Style.Triggers>
        </Style>-->
        <!--从基类样式派生的RadioButton样式-->
        <Style BasedOn="{StaticResource styleButton}" TargetType="RadioButton">
            <Setter Property="FontSize" Value="22"/>
            <Setter Property="Foreground" Value="Red"/>
        </Style>
        <XmlDataProvider x:Key="InventoryData" XPath="Inventory/Book">
            <x:XData>
                <Inventory xmlns="">
                    <Book>
                        <Chapter Number="2">
                            <Title>WPF如何实现绘制</Title>
                        </Chapter>
                        <Chapter Number="2">
                            <Title>WPF依赖属性</Title>
                        </Chapter>
                        <Chapter Number="3">
                            <Title>WPF路由事件</Title>
                        </Chapter>
                        <Chapter Number="3">
                            <Title>WPF命令</Title>
                        </Chapter>
                        <Chapter Number="4">
                            <Title>WPF页面和导航</Title>
                        </Chapter>
                    </Book>
                </Inventory>
            </x:XData>
        </XmlDataProvider>
        <Style TargetType="ListBoxItem">
            <Setter Property="Margin" Value="0,2,0,2"/>
            <Setter Property="Padding" Value="0,2,0,2"/>
            <Setter Property="FontFamily" Value="宋体"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding XPath=@Number}" Value="3">
                    <Setter Property="TextBlock.Foreground" Value="Red"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding XPath=@Number}" Value="4">
                    <Setter Property="TextBlock.Foreground" Value="Green"/>

                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <WrapPanel>
        <Button Content="button1"/>
        <Button Content="button2"/>
        <Button Content="button3"/>

        <RadioButton Content="哈哈"/>

        <StackPanel Orientation="Vertical" Margin="20">
            <ListBox HorizontalAlignment="Center" Padding="2">
                <ListBox.ItemsSource>
                    <Binding Source="{StaticResource InventoryData}" XPath="*"/>
                </ListBox.ItemsSource>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock FontSize="20" Margin="0,0,10,0" FontFamily="华文行楷">
                            <TextBlock.Text>
                                <Binding XPath="Title"/>
                            </TextBlock.Text>
                        </TextBlock>
                    </DataTemplate>
                </ListBox.ItemTemplate>
                <ListBox.Triggers>
                    <EventTrigger RoutedEvent="ListBox.Loaded">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:2"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </ListBox.Triggers>
            </ListBox>
        </StackPanel>

        <Grid>
            <Grid.Resources>
                <ControlTemplate x:Key="btnTemplate">
                    <Grid Cursor="Hand">
                        <!--第一个外圆-->
                        <Ellipse Name="outerCircle" Width="100" Height="100">
                            <Ellipse.Fill>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <!--常规的数据绑定方法-->
                                    <GradientStop Offset="0" Color="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Background.Color}"/>
                                    <GradientStop Offset="1" Color="Red"/>
                                </LinearGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse>
                        <!--第二个內圆-->
                        <Ellipse RenderTransformOrigin=".5,.5">
                            <!--第二个圆的大小是第一个圆的0.8，与绝对值无关-->
                            <Ellipse.RenderTransform>
                                <ScaleTransform ScaleX=".8" ScaleY=".8"/>
                            </Ellipse.RenderTransform>
                            <Ellipse.Fill>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Offset="0" Color="White"/>
                                    <GradientStop Offset="1" Color="Transparent"/>
                                </LinearGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse>
                        <Viewbox>
                            <!--模板绑定-->
                            <ContentPresenter Margin="20" Content="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Content}"/>
                        </Viewbox>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsMouseOver" Value="true">
                            <Setter TargetName="outerCircle" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent},Path=BorderBrush}"/>
                        </Trigger>
                        <Trigger Property="Button.IsPressed" Value="true">
                            <!--将变换的原点设置在中心，避免鼠标按下偏移-->

                            <Setter Property="RenderTransformOrigin" Value=".5,.5"/>
                            <Setter Property="RenderTransform">
                                <Setter.Value>
                                    <!--在 二维 x-y 坐标系统内缩放对象-->
                                    <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="Button.IsEnabled" Value="False">
                            <Setter TargetName="outerCircle" Property="Fill" Value="Gray">

                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Grid.Resources>
            <Button Width="100" Height="100" Content="确定" Background="CadetBlue" BorderBrush="BurlyWood"
                Template="{StaticResource btnTemplate}" Click="Button_Click"/>
        </Grid>
    </WrapPanel>
</Window>
